{
    "installationService": "CommonGateway\\PetStoreBundle\\Service\\InstallationService",
    "applications": [
        {
            "title": "Example Front-end Application",
            "$id": "https://example.com/application/ps.frontend.application.json",
            "$schema": "https://docs.commongateway.nl/schemas/Application.schema.json",
            "version": "0.0.1",
            "description": "An example Front-end Application. This is not required for the gateway to work, there is a default Application created on init. Applications can be used to allow the given domains to use the gateway. And can be used by plugin services to get a domain of an application.",
            "domains": [
                "frontend.example.com"
            ]
        }
    ],
    "users": [
        {
            "$id": "https://example.com/user/johnDoe.user.json",
            "version": "0.0.1",
            "description": "An example User with an example SecurityGroup. It is not allowed to set a User password or change/create Admin Users this way.",
            "email": "johnDoe@username.com",
            "locale": "en",
            "securityGroups": [
                "https://example.com/securityGroup/example.securityGroup.json"
            ]
        }
    ],
    "cards": {
        "schemas": [
            "https://example.com/example.schema.json"
        ],
        "collections": [
            "https://example.com/collection/ps.default.collection.json"
        ],
        "applications": [
            "https://example.com/application/ps.frontend.application.json"
        ]
    },
    "actions": {
        "handlers": [
            {
                "reference": "https://hp.nl/action/hp.CreatePaymentAction.action.json",
                "actionHandler": "CommonGateway\\PetStoreBundle\\ActionHandler\\PetStoreHandler",
                "listens": ["ps.default.listens"],
                "configuration": {
                    "description": "This is an example of how we can create a Action for an ActionHandler.",
                    "note": "Note that creating an Action for an ActionHandler this way can only be done once! If you want to create more actions using the same ActionHandler please use action.json files in the Installation folder.",
                    "configurationKey": "Some configuration here...",
                    "doThis": false,
                    "doThat": true
                }
            }
        ],
        "fixConfigRef": [
            "https://example.com/action/ps.EmailActionExample.action.json"
        ]
    },
    "collections": [
        {
            "reference": "https://example.com/collection/ps.default.collection.json",
            "schemaPrefix": "https://example.com/schema"
        }
    ],
    "endpoints": {
        "multipleSchemas": [
            {
                "$id": "https://example.com/EntitiesEndpoint/search.endpoint.json",
                "version": "0.0.1",
                "name": "Search",
                "description": "Generic Search Endpoint. This is an example of an Endpoint using multiple schemas, this way it is possible to get data of multiple schemas.",
                "schemas": [
                    "https://example.com/example.schema.json",
                    "https://example.com/schema/relationExample.schema.json"
                ],
                "path": ["search"],
                "pathRegex": "^(search)$",
                "methods": ["GET"]
            }
        ],
        "schemas": [
            {
                "reference": "https://example.com/example.schema.json",
                "description": "An example for the following endpoint: /api/examples. methods: [] stands for 'All methods are allowed'. This endpoint also has 2 sub endpoint examples, a subSchemaEndpoint and a subEndpoint.",
                "path": "examples",
                "methods": [],
                "subSchemaEndpoints": [
                    {
                        "reference": "https://example.com/schema/relationExample.schema.json",
                        "description": "An example for the following endpoint: /api/examples/{example-uuid}/relationexamples",
                        "path": "relationexamples",
                        "methods": ["GET", "DELETE"],
                        "throws": ["ps.example.relationexamples"]
                    }
                ],
                "subEndpoints": [
                    {
                        "description": "An example for the following endpoint: PUT /api/examples/publish.",
                        "path": "publish",
                        "methods": ["PUT"],
                        "throws": ["ps.example.publish"]
                    }
                ]
            },
            {
                "reference": "https://example.com/schema/relationExample.schema.json",
                "description": "An example for the following endpoint: /api/relationexamples. This is the most common way of creating an Endpoint for a Schema. But in this specific example we only allow the GET and DELETE calls.",
                "path": "relationexamples",
                "methods": ["GET", "DELETE"]
            }
        ]
    }
}